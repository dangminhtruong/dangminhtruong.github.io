{"version":3,"sources":["components/repository.js","pages/Home/Home.js"],"names":["Repository","_ref","repository","loadStargazers","_useState","useState","_useState2","Object","slicedToArray","openStg","setOpenStg","react_default","a","createElement","className","divider","name","es_button","type","shape","icon","EyeOutlined","stargazers_count","description","onClick","id","stargazers_url","stargazers","list","grid","gutter","column","dataSource","renderItem","stargazer","Item","card","title","login","avatar","src","avatar_url","href","html_url","Search","Input","Home","loadMore","_this","props","_this$props$data","data","currentPage","username","page","repoId","url","fetchData","this","_this2","_this$props$data2","repositories","total","lastPage","loading","placeholder","enterButton","size","onSearch","value","search","badge","count","length","map","components_repository","key","concat","Component","mapDispatchToProps","connect","state","selectData","toJS"],"mappings":"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","file":"static/js/4.a9df94fc.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { Divider, Button, Card, List, Avatar } from 'antd';\nimport { EyeOutlined } from '@ant-design/icons';\n\nconst Repository = ({ repository, loadStargazers }) => { \n    const [openStg, setOpenStg] = useState(false)\n\n    return (\n        <div className=\"repo\">\n            <Divider>\n                <div className=\"repo-info\">\n                    <p className=\"repo-name\">{repository.name}</p>\n                    <Button type=\"dashed\" shape=\"round\" icon={<EyeOutlined />}>\n                        <span className=\"repo-stargazer\">{repository.stargazers_count}</span>\n                    </Button>\n                </div>\n            </Divider>\n            <p>\n                {(repository.description) ? repository.description : 'This repository have no description'}\n            </p>\n            <div>\n                {\n                    (openStg) ?\n                    <Button onClick={() => setOpenStg(false)} type='link' >\n                        Close\n                    </Button>:\n                    <Button onClick={() => { loadStargazers(repository.id, repository.stargazers_url); setOpenStg(true)}} type='link' >\n                        Show stargazers\n                    </Button>\n                }\n            </div>\n            {\n                (openStg && repository.stargazers) ?\n                    <div className=\"list-stargazers\">\n                        <List\n                            grid={{ gutter: 16, column: 4 }}\n                            dataSource={repository.stargazers}\n                            renderItem={stargazer => (\n                                <List.Item>\n                                    <Card title={stargazer.login}>\n                                        <Avatar src={stargazer.avatar_url} />\n                                        <Button type=\"link\" href={stargazer.html_url}>Go to profile</Button>\n                                    </Card>\n                                </List.Item>\n                            )}\n                        />\n\n                    </div> : null\n            }\n\n        </div>\n    )\n};\n\nexport default Repository;","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Repository from '../../components/repository'\nimport { selectData, fetchData, loadMore, loadStargazers } from '../../state/modules/Home'\nimport { Input, Button, Badge, Spin } from 'antd';\nimport './home.scss'\n\nconst { Search } = Input;\n\nclass Home extends Component {\n\n    search(username){\n        const {fetchData} = this.props\n        fetchData({username, page: 1})\n    }\n\n    loadMore = () => {\n        const {loadMore} = this.props\n        const {currentPage, username} = this.props.data\n        loadMore({username, page: currentPage + 1})\n    }\n\n    loadStargazers = (repoId, url) => {\n        const {loadStargazers} = this.props\n        loadStargazers({repoId, url})\n    }\n\n    render() {\n        const {repositories, total, lastPage, currentPage, loading} = this.props.data\n        return(\n            \n            <div className=\"home\">\n                <Search\n                    placeholder=\"Input username..\"\n                    enterButton=\"Search\"\n                    size=\"large\"\n                    onSearch={value => this.search(value)}\n                />\n                <div className=\"repositories\">\n                    <div className=\"information\">\n                    <Badge count={total}>\n                        <Button type=\"dashed\">Public repo</Button>\n                    </Badge>\n                    <Badge count={repositories.length}>\n                        <Button type=\"dashed\">Loaded</Button>\n                    </Badge>\n                    </div>\n                    {\n                        repositories.map(repository => (\n                            <Repository key={`repo ${repository.id}`} \n                                repository={repository}\n                                loadStargazers={this.loadStargazers}\n                            />\n                        ))\n                    }\n                    {\n                        (currentPage < lastPage) ?\n                            <Button type=\"primary\" onClick={this.loadMore} loading={loading}>\n                                Load more\n                            </Button>\n                        : null\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    data: selectData(state).toJS()\n});\n\nconst mapDispatchToProps = {\n    fetchData,\n    loadMore,\n    loadStargazers\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);"],"sourceRoot":""}